Modifies the aspenite config file to actually handle Chumby 8 configuration.
I should probably actually break this out to a different board file just for chumby 8.
diff -rup linux-3.13-rc1/arch/arm/mach-mmp/aspenite.c linux-3.13-rc1/arch/arm/mach-mmp/aspenite.c
--- linux-3.13-rc1/arch/arm/mach-mmp/aspenite.c	2013-11-22 11:30:55.000000000 -0800
+++ linux-3.13-rc1/arch/arm/mach-mmp/aspenite.c	2013-12-01 16:30:56.712932134 -0800
@@ -19,6 +19,7 @@
 #include <linux/mtd/nand.h>
 #include <linux/interrupt.h>
 #include <linux/platform_data/mv_usb.h>
+#include <linux/mmc/sdhci.h>
 
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
@@ -33,23 +34,19 @@
 #include "common.h"
 
 static unsigned long common_pin_config[] __initdata = {
-	/* Data Flash Interface */
-	GPIO0_DFI_D15,
-	GPIO1_DFI_D14,
-	GPIO2_DFI_D13,
-	GPIO3_DFI_D12,
-	GPIO4_DFI_D11,
-	GPIO5_DFI_D10,
-	GPIO6_DFI_D9,
-	GPIO7_DFI_D8,
-	GPIO8_DFI_D7,
-	GPIO9_DFI_D6,
-	GPIO10_DFI_D5,
-	GPIO11_DFI_D4,
-	GPIO12_DFI_D3,
-	GPIO13_DFI_D2,
-	GPIO14_DFI_D1,
-	GPIO15_DFI_D0,
+
+	/* MMC3 (internal SD card) */
+	GPIO0_MMC3_DAT7,
+	GPIO1_MMC3_DAT6,
+	GPIO2_MMC3_DAT5,
+	GPIO3_MMC3_DAT4,
+	GPIO4_MMC3_DAT3,
+	GPIO5_MMC3_DAT2,
+	GPIO6_MMC3_DAT1,
+	GPIO7_MMC3_DAT0,
+	GPIO8_MMC3_CLK,
+	GPIO9_MMC3_CMD,
+	GPIO16_SMC_nCS0_DIS,
 
 	/* Static Memory Controller */
 	GPIO18_SMC_nCS0,
@@ -62,173 +59,155 @@ static unsigned long common_pin_config[]
 	GPIO36_SMC_BE2,
 	GPIO27_GPIO,	/* Ethernet IRQ */
 
-	/* UART1 */
-	GPIO107_UART1_RXD,
-	GPIO108_UART1_TXD,
-
-	/* SSP1 */
+	/* LCD */
+	MFP_CFG_DRV_PULL(GPIO56, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO57, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO58, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO59, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO60, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO61, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO62, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO63, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO64, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO65, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO66, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO67, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO68, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO69, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO70, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO71, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO72, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO73, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO74, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO75, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO76, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO77, AF1, VERY_SLOW, LOW),
+	MFP_CFG_DRV_PULL(GPIO78, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO79, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO80, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO81, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO82, AF1, FAST, LOW),
+	MFP_CFG_DRV_PULL(GPIO83, AF1, FAST, LOW),
+	
+	// USB OTG VBUS?
+	MFP_CFG(GPIO85, AF0),
+        
+	/* I2C */
+	GPIO105_CI2C_SDA,
+	GPIO106_CI2C_SCL,
+	
+	/* Ensure UART1 input works? */
+	MFP_CFG(GPIO109, AF0),
+	
+	/* SSP -- I2S */
 	GPIO113_I2S_MCLK,
 	GPIO114_I2S_FRM,
 	GPIO115_I2S_BCLK,
 	GPIO116_I2S_RXD,
 	GPIO117_I2S_TXD,
-
-	/* LCD */
-	GPIO56_LCD_FCLK_RD,
-	GPIO57_LCD_LCLK_A0,
-	GPIO58_LCD_PCLK_WR,
-	GPIO59_LCD_DENA_BIAS,
-	GPIO60_LCD_DD0,
-	GPIO61_LCD_DD1,
-	GPIO62_LCD_DD2,
-	GPIO63_LCD_DD3,
-	GPIO64_LCD_DD4,
-	GPIO65_LCD_DD5,
-	GPIO66_LCD_DD6,
-	GPIO67_LCD_DD7,
-	GPIO68_LCD_DD8,
-	GPIO69_LCD_DD9,
-	GPIO70_LCD_DD10,
-	GPIO71_LCD_DD11,
-	GPIO72_LCD_DD12,
-	GPIO73_LCD_DD13,
-	GPIO74_LCD_DD14,
-	GPIO75_LCD_DD15,
-	GPIO76_LCD_DD16,
-	GPIO77_LCD_DD17,
-	GPIO78_LCD_DD18,
-	GPIO79_LCD_DD19,
-	GPIO80_LCD_DD20,
-	GPIO81_LCD_DD21,
-	GPIO82_LCD_DD22,
-	GPIO83_LCD_DD23,
-
-	/* Keypad */
-	GPIO109_KP_MKIN1,
-	GPIO110_KP_MKIN0,
-	GPIO111_KP_MKOUT7,
-	GPIO112_KP_MKOUT6,
-	GPIO121_KP_MKIN4,
+    
+    /* MMC2 (Wifi) */
+	GPIO90_MMC2_DAT3,
+	GPIO91_MMC2_DAT2,
+	GPIO92_MMC2_DAT1,
+	GPIO93_MMC2_DAT0,
+	GPIO94_MMC2_CMD,
+	GPIO95_MMC2_CLK,
+	
+	/* LCD power */
+	MFP_CFG_DRV(GPIO84, AF0, SLOW),
+	
+	/* Touchscreen */
+	MFP_CFG(GPIO118, AF1),
+	MFP_CFG(GPIO119, AF1),
+	MFP_CFG(GPIO120, AF1),
+	MFP_CFG(GPIO121, AF1),
+	
+	/* Bend sensor detect */
+	MFP_CFG(GPIO89, AF0),
+	
+	/* Headphone jack detect */
+	MFP_CFG(GPIO97, AF0),
+	
+	/* Cryptoprocessor UART */
+	MFP_CFG(GPIO98, AF2),
+	MFP_CFG(GPIO99, AF2),
+	
+	/* Media insert detect */
+	MFP_CFG(GPIO100, AF0),
+	MFP_CFG(GPIO101, AF0),
+	MFP_CFG(GPIO102, AF0),
+	MFP_CFG(GPIO103, AF0),
 };
 
 static struct pxa_gpio_platform_data pxa168_gpio_pdata = {
 	.irq_base	= MMP_GPIO_TO_IRQ(0),
 };
 
-static struct smc91x_platdata smc91x_info = {
-	.flags	= SMC91X_USE_16BIT | SMC91X_NOWAIT,
-};
-
-static struct resource smc91x_resources[] = {
+/*static struct fb_videomode video_modes[] = {
 	[0] = {
-		.start	= SMC_CS1_PHYS_BASE + 0x300,
-		.end	= SMC_CS1_PHYS_BASE + 0xfffff,
-		.flags	= IORESOURCE_MEM,
-	},
-	[1] = {
-		.start	= MMP_GPIO_TO_IRQ(27),
-		.end	= MMP_GPIO_TO_IRQ(27),
-		.flags	= IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHEDGE,
-	}
-};
-
-static struct platform_device smc91x_device = {
-	.name		= "smc91x",
-	.id		= 0,
-	.dev		= {
-		.platform_data = &smc91x_info,
+		.pixclock	= 25641,
+		.refresh	= 60,
+		.xres		= 800,
+		.yres		= 600,
+		.hsync_len	= 128,
+		.left_margin	= 215,
+		.right_margin	= 40,
+		.vsync_len	= 4,
+		.upper_margin	= 34,
+		.lower_margin	= 14,
+		.sync		= FB_SYNC_HOR_HIGH_ACT,
 	},
-	.num_resources	= ARRAY_SIZE(smc91x_resources),
-	.resource	= smc91x_resources,
-};
-
-static struct mtd_partition aspenite_nand_partitions[] = {
-	{
-		.name		= "bootloader",
-		.offset		= 0,
-		.size		= SZ_1M,
-		.mask_flags	= MTD_WRITEABLE,
-	}, {
-		.name		= "reserved",
-		.offset		= MTDPART_OFS_APPEND,
-		.size		= SZ_128K,
-		.mask_flags	= MTD_WRITEABLE,
-	}, {
-		.name		= "reserved",
-		.offset		= MTDPART_OFS_APPEND,
-		.size		= SZ_8M,
-		.mask_flags	= MTD_WRITEABLE,
-	}, {
-		.name		= "kernel",
-		.offset		= MTDPART_OFS_APPEND,
-		.size		= (SZ_2M + SZ_1M),
-		.mask_flags	= 0,
-	}, {
-		.name		= "filesystem",
-		.offset		= MTDPART_OFS_APPEND,
-		.size		= SZ_32M + SZ_16M,
-		.mask_flags	= 0,
-	}
-};
-
-static struct pxa3xx_nand_platform_data aspenite_nand_info = {
-	.enable_arbiter	= 1,
-	.num_cs = 1,
-	.parts[0]	= aspenite_nand_partitions,
-	.nr_parts[0]	= ARRAY_SIZE(aspenite_nand_partitions),
-};
-
-static struct i2c_board_info aspenite_i2c_info[] __initdata = {
-	{ I2C_BOARD_INFO("wm8753", 0x1b), },
-};
+};*/
 
 static struct fb_videomode video_modes[] = {
 	[0] = {
-		.pixclock	= 30120,
+		.pixclock	= 25132,
 		.refresh	= 60,
 		.xres		= 800,
-		.yres		= 480,
-		.hsync_len	= 1,
-		.left_margin	= 215,
+		.yres		= 600,
+		.hsync_len	= 128,
+		.left_margin	= 88,
 		.right_margin	= 40,
-		.vsync_len	= 1,
-		.upper_margin	= 34,
-		.lower_margin	= 10,
-		.sync		= FB_SYNC_VERT_HIGH_ACT | FB_SYNC_HOR_HIGH_ACT,
+		.vsync_len	= 3,
+		.upper_margin	= 24,
+		.lower_margin	= 1,
+		/*.sync		= FB_SYNC_HOR_HIGH_ACT,*/
 	},
 };
 
-struct pxa168fb_mach_info aspenite_lcd_info = {
-	.id			= "Graphic Frame",
+struct pxa168fb_mach_info chumby8_lcd_info = {
+	.id			= "Base-chumby",
 	.modes			= video_modes,
 	.num_modes		= ARRAY_SIZE(video_modes),
-	.pix_fmt		= PIX_FMT_RGB565,
-	.io_pin_allocation_mode = PIN_MODE_DUMB_24,
-	.dumb_mode		= DUMB_MODE_RGB888,
-	.active			= 1,
-	.panel_rbswap		= 0,
-	.invert_pixclock	= 0,
-};
-
-static const unsigned int aspenite_matrix_key_map[] = {
-	KEY(0, 6, KEY_UP),	/* SW 4 */
-	KEY(0, 7, KEY_DOWN),	/* SW 5 */
-	KEY(1, 6, KEY_LEFT),	/* SW 6 */
-	KEY(1, 7, KEY_RIGHT),	/* SW 7 */
-	KEY(4, 6, KEY_ENTER),	/* SW 8 */
-	KEY(4, 7, KEY_ESC),	/* SW 9 */
-};
-
-static struct matrix_keymap_data aspenite_matrix_keymap_data = {
-	.keymap			= aspenite_matrix_key_map,
-	.keymap_size		= ARRAY_SIZE(aspenite_matrix_key_map),
-};
-
-static struct pxa27x_keypad_platform_data aspenite_keypad_info __initdata = {
-	.matrix_key_rows	= 5,
-	.matrix_key_cols	= 8,
-	.matrix_keymap_data	= &aspenite_matrix_keymap_data,
-	.debounce_interval	= 30,
+	.pix_fmt		= PIX_FMT_RGBA888,
+	.io_pin_allocation_mode = PIN_MODE_DUMB_18_GPIO/* | 0x20U*/, /* No crossing 1K boundary */
+	.dumb_mode		= DUMB_MODE_RGB666,
+	
+	.gpio_output_data = 0x10, /* LCD_SPU_DUMB_CTRL[27:20] */
+	.gpio_output_mask = 0xff, /* LCD_SPU_DUMB_CTRL[19:12] */
+	
+	.invert_composite_blank = 0,
+	.invert_pix_val_ena = 0,
+	.invert_pixclock = 1,
+	.panel_rbswap = 0,
+	.active = 1,
+	.enable_lcd = 1,
+};
+
+static struct i2c_board_info chumby8_i2c1_info[] __initdata = {
+};
+
+static struct i2c_board_info chumby8_i2c2_info[] __initdata = {
+	{ I2C_BOARD_INFO("wm8961", 0x4a), },
+};
+
+static struct sdhci_pxa_platdata chumby8_sdh_platdata = {
+	.quirks = SDHCI_QUIRK_NO_HISPD_BIT | SDHCI_QUIRK_NO_BUSY_IRQ | SDHCI_QUIRK_32BIT_DMA_SIZE,
+	.flags = PXA_FLAG_CARD_PERMANENT,
+	.clk_delay_cycles = 0x1f,
+	.delay_in_ms = 5,
+	.pxav1_controller = 1,
 };
 
 #if defined(CONFIG_USB_EHCI_MV)
@@ -243,24 +222,42 @@ static struct mv_usb_platform_data pxa16
 static void __init common_init(void)
 {
 	mfp_config(ARRAY_AND_SIZE(common_pin_config));
+	
+	/* Set up IO stuff */
+	pxa168_set_vdd_iox(VDD_IO0, VDD_IO_3P3V);
+	pxa168_set_vdd_iox(VDD_IO1, VDD_IO_3P3V);
+	pxa168_set_vdd_iox(VDD_IO2, VDD_IO_3P3V);
+	pxa168_set_vdd_iox(VDD_IO3, VDD_IO_1P8V);
+	pxa168_set_vdd_iox(VDD_IO4, VDD_IO_3P3V);
+	pxa168_mfp_set_fastio_drive(MFP_DS02X);
 
 	/* on-chip devices */
 	pxa168_add_uart(1);
-	pxa168_add_twsi(1, NULL, ARRAY_AND_SIZE(aspenite_i2c_info));
-	pxa168_add_ssp(1);
-	pxa168_add_nand(&aspenite_nand_info);
-	pxa168_add_fb(&aspenite_lcd_info);
-	pxa168_add_keypad(&aspenite_keypad_info);
+	pxa168_add_uart(3);
+	
+	pxa168_add_twsi(0, NULL, ARRAY_AND_SIZE(chumby8_i2c1_info));	
+	pxa168_add_twsi(1, NULL, ARRAY_AND_SIZE(chumby8_i2c2_info));
+	
+	pxa168_add_sdh(0, &chumby8_sdh_platdata);
+	pxa168_add_sdh(1, &chumby8_sdh_platdata);
+	pxa168_add_sdh(2, &chumby8_sdh_platdata);
+	pxa168_add_fb(&chumby8_lcd_info);
 	platform_device_add_data(&pxa168_device_gpio, &pxa168_gpio_pdata,
 				 sizeof(struct pxa_gpio_platform_data));
 	platform_device_register(&pxa168_device_gpio);
 
-	/* off-chip devices */
-	platform_device_register(&smc91x_device);
-
 #if defined(CONFIG_USB_EHCI_MV)
 	pxa168_add_usb_host(&pxa168_sph_pdata);
 #endif
+
+	/* Ensure UART will work */
+	if (gpio_request(109, "GPIO109")) {
+		printk(KERN_ERR "GPIO109 request failed\n");
+	} else {
+		gpio_direction_output(109, 1);
+		gpio_set_value(109, 0);
+		gpio_free(109);
+	}
 }
 
 MACHINE_START(ASPENITE, "PXA168-based Aspenite Development Platform")
