Fixes clock enable in pxa168 framebuffer driver. Also allows it to allocate enough RAM.
I added a few things from the Chumby 2.6.28 kernel, but they're currently #ifdef-ed out. Not sure
exactly what their original purpose is.
diff -rup linux-3.13-rc1/drivers/video/pxa168fb.c linux-3.13-rc1/drivers/video/pxa168fb.c
--- linux-3.13-rc1/drivers/video/pxa168fb.c	2013-11-22 11:30:55.000000000 -0800
+++ linux-3.13-rc1/drivers/video/pxa168fb.c	2013-12-01 13:59:33.656764144 -0800
@@ -678,6 +678,16 @@ static int pxa168fb_probe(struct platfor
 		goto failed_free_info;
 	}
 
+#if 0
+	/* 
+	 * Reset LCD parameters, to eliminate a black flicker on boot.
+	 * The other framebuffer ought to be all set up already so hide this
+	 * one.
+	 */
+	printk(KERN_INFO "Changing LCD_SPU_DMA_CTRL1 from 0x%08x -> 0x2002ff81\n", readl(fbi->reg_base + LCD_SPU_DMA_CTRL1));
+	writel(0x2002ff81, fbi->reg_base + LCD_SPU_DMA_CTRL1);
+#endif
+
 	/*
 	 * Allocate framebuffer memory.
 	 */
@@ -715,7 +725,19 @@ static int pxa168fb_probe(struct platfor
 	/*
 	 * enable controller clock
 	 */
-	clk_enable(fbi->clk);
+	clk_prepare_enable(fbi->clk);
+	
+#if 0
+	/*
+	 * Give the previous value time to set.  If we change both values too
+	 * quickly, the screen flickers.
+	 */
+	printk(KERN_INFO "Changing LCD_SPU_DMA_CTRL0 from 0x%08x -> 0x08441111\n", readl(fbi->reg_base + LCD_SPU_DMA_CTRL0));
+	writel(0x08441111, fbi->reg_base + LCD_SPU_DMA_CTRL0);
+
+	printk(KERN_INFO "Changing LCD_SPU_DMA_CTRL1 from 0x%08x -> 0x2002ff81\n", readl(fbi->reg_base + LCD_SPU_DMA_CTRL1));
+	writel(0x20010081, fbi->reg_base + LCD_SPU_DMA_CTRL1);
+#endif
 
 	pxa168fb_set_par(info);
 
@@ -729,6 +751,10 @@ static int pxa168fb_probe(struct platfor
 	writel(0, fbi->reg_base + LCD_SPU_SRAM_PARA0);
 	writel(CFG_CSB_256x32(0x1)|CFG_CSB_256x24(0x1)|CFG_CSB_256x8(0x1),
 		fbi->reg_base + LCD_SPU_SRAM_PARA1);
+		
+#if 0
+	writel(0x2001ff81, fbi->reg_base + LCD_SPU_DMA_CTRL1);
+#endif
 
 	/*
 	 * Allocate color map.
@@ -770,7 +796,7 @@ static int pxa168fb_probe(struct platfor
 failed_free_cmap:
 	fb_dealloc_cmap(&info->cmap);
 failed_free_clk:
-	clk_disable(fbi->clk);
+	clk_disable_unprepare(fbi->clk);
 failed_free_fbmem:
 	dma_free_coherent(fbi->dev, info->fix.smem_len,
 			info->screen_base, fbi->fb_start_dma);
@@ -812,7 +838,7 @@ static int pxa168fb_remove(struct platfo
 	dma_free_writecombine(fbi->dev, PAGE_ALIGN(info->fix.smem_len),
 				info->screen_base, info->fix.smem_start);
 
-	clk_disable(fbi->clk);
+	clk_disable_unprepare(fbi->clk);
 	clk_put(fbi->clk);
 
 	framebuffer_release(info);
diff -rup linux-3.13-rc1/include/video/pxa168fb.h linux-3.13-rc1/include/video/pxa168fb.h
--- linux-3.13-rc1/include/video/pxa168fb.h	2013-11-22 11:30:55.000000000 -0800
+++ linux-3.13-rc1/include/video/pxa168fb.h	2013-11-29 11:09:22.381379379 -0800
@@ -35,7 +35,7 @@
 #define DUMB_MODE_RGB888		6
 
 /* default fb buffer size WVGA-32bits */
-#define DEFAULT_FB_SIZE	(800 * 480 * 4)
+#define DEFAULT_FB_SIZE	(800 * 600 * 4)
 
 /*
  * Buffer pixel format
